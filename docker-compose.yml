version: '3'

networks:
  mynetwork:

services:
  logstash:
    build:
      context: .
      dockerfile: logstash/Dockerfile
    ports:
      - '3001:3001'
    networks:
      - mynetwork
    depends_on:
      kafka-topic:
        condition: service_completed_successfully
      spark:
        condition: service_healthy

  python_server:
    build:
      context: .
      dockerfile: python/Dockerfile
    depends_on:
      - logstash
    networks:
      - mynetwork

  kafka-server:
    build:
      context: .
      dockerfile: kafka/Dockerfile.server
    ports:
      - 9092:9092
    networks:
      - mynetwork

  kafka-topic:
    build:
      context: .
      dockerfile: kafka/Dockerfile.topics
    networks:
      - mynetwork
    depends_on:
      - kafka-server

  kafka-ui:
    build:
      context: .
      dockerfile: kafka/Dockerfile.ui
    ports:
      - 8080:8080
    networks:
      - mynetwork
    depends_on:
      - kafka-server

  spark:
    build:
      context: .
      dockerfile: spark/Dockerfile
    ports:
      - 4040:4040
    networks:
      - mynetwork
    volumes:
      - $PWD/spark/models/:/opt/models
    depends_on:
      kafka-topic:
        condition: service_completed_successfully
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    build:
      context: .
      dockerfile: elasticsearch/Dockerfile
    ports:
      - 9200:9200
    networks:
      - mynetwork
